// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OBJS.API.Models;

namespace OBJS.API.Migrations
{
    [DbContext(typeof(ApplicationDBContext))]
    [Migration("20200526165851_customerdetail_phone_string")]
    partial class customerdetail_phone_string
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("OBJS.API.Models.Advertises.Advertise", b =>
                {
                    b.Property<int>("AdvertiseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AdvertiseStateId")
                        .HasColumnType("int");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Startdate")
                        .HasColumnType("datetime2");

                    b.HasKey("AdvertiseId");

                    b.HasIndex("AdvertiseStateId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("CustomerId");

                    b.ToTable("Advertises");
                });

            modelBuilder.Entity("OBJS.API.Models.Advertises.AdvertiseDetail", b =>
                {
                    b.Property<int>("AdvertiseDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AdvertiseId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImagePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AdvertiseDetailId");

                    b.HasIndex("AdvertiseId");

                    b.ToTable("AdvertiseDetails");
                });

            modelBuilder.Entity("OBJS.API.Models.Advertises.AdvertiseState", b =>
                {
                    b.Property<int>("AdvertiseStateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsContinue")
                        .HasColumnType("bit");

                    b.Property<bool>("IsFinished")
                        .HasColumnType("bit");

                    b.Property<bool>("IsStarted")
                        .HasColumnType("bit");

                    b.HasKey("AdvertiseStateId");

                    b.ToTable("AdvertiseStates");

                    b.HasData(
                        new
                        {
                            AdvertiseStateId = 1,
                            IsContinue = false,
                            IsFinished = false,
                            IsStarted = true
                        },
                        new
                        {
                            AdvertiseStateId = 2,
                            IsContinue = true,
                            IsFinished = false,
                            IsStarted = false
                        },
                        new
                        {
                            AdvertiseStateId = 3,
                            IsContinue = false,
                            IsFinished = true,
                            IsStarted = false
                        });
                });

            modelBuilder.Entity("OBJS.API.Models.Advertises.Feedback", b =>
                {
                    b.Property<int>("AdvertisefeedbackId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AdvertiseId")
                        .HasColumnType("int");

                    b.Property<int>("BidderID")
                        .HasColumnType("int");

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OwnerID")
                        .HasColumnType("int");

                    b.Property<int>("Star")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AdvertisefeedbackId");

                    b.HasIndex("AdvertiseId");

                    b.HasIndex("BidderID");

                    b.HasIndex("OwnerID");

                    b.ToTable("Feedbacks");
                });

            modelBuilder.Entity("OBJS.API.Models.Categories.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("ParentID")
                        .HasColumnType("int");

                    b.HasKey("CategoryId");

                    b.HasIndex("ParentID");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryId = 1,
                            Name = "Temizlik"
                        },
                        new
                        {
                            CategoryId = 2,
                            Name = "Tadilat"
                        },
                        new
                        {
                            CategoryId = 3,
                            Name = "Nakliyat"
                        },
                        new
                        {
                            CategoryId = 4,
                            Name = "Montaj-Hizmet"
                        },
                        new
                        {
                            CategoryId = 5,
                            Name = "Ev Temizliği",
                            ParentID = 1
                        },
                        new
                        {
                            CategoryId = 6,
                            Name = "Koltuk Temizliği",
                            ParentID = 1
                        },
                        new
                        {
                            CategoryId = 7,
                            Name = "Boyama",
                            ParentID = 2
                        },
                        new
                        {
                            CategoryId = 8,
                            Name = "Evden Eve",
                            ParentID = 3
                        },
                        new
                        {
                            CategoryId = 9,
                            Name = "Şehirlerarası",
                            ParentID = 3
                        },
                        new
                        {
                            CategoryId = 10,
                            Name = "Tesisatçı",
                            ParentID = 4
                        },
                        new
                        {
                            CategoryId = 11,
                            Name = "Elektrik Tesisatçısı",
                            ParentID = 10
                        },
                        new
                        {
                            CategoryId = 12,
                            Name = "Su Tesisatçısı",
                            ParentID = 10
                        });
                });

            modelBuilder.Entity("OBJS.API.Models.Customers.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CompanyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsCustomer")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSupplier")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CustomerId");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("OBJS.API.Models.Customers.CustomerDetail", b =>
                {
                    b.Property<int>("CustomerdetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CustomerdetailId");

                    b.HasIndex("CustomerId");

                    b.ToTable("CustomerDetails");
                });

            modelBuilder.Entity("OBJS.API.Models.Transactions.Bid", b =>
                {
                    b.Property<int>("BidId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AdvertiseId")
                        .HasColumnType("int");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<int>("Duration")
                        .HasColumnType("int");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.HasKey("BidId");

                    b.HasIndex("AdvertiseId");

                    b.HasIndex("CustomerId");

                    b.ToTable("Bids");
                });

            modelBuilder.Entity("OBJS.API.Models.Advertises.Advertise", b =>
                {
                    b.HasOne("OBJS.API.Models.Advertises.AdvertiseState", "Advertisestate")
                        .WithMany("Advertises")
                        .HasForeignKey("AdvertiseStateId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("OBJS.API.Models.Categories.Category", "Category")
                        .WithMany("Advertises")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("OBJS.API.Models.Customers.Customer", "Customer")
                        .WithMany("Advertises")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("OBJS.API.Models.Advertises.AdvertiseDetail", b =>
                {
                    b.HasOne("OBJS.API.Models.Advertises.Advertise", null)
                        .WithMany("AdvertiseDetails")
                        .HasForeignKey("AdvertiseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("OBJS.API.Models.Advertises.Feedback", b =>
                {
                    b.HasOne("OBJS.API.Models.Advertises.Advertise", null)
                        .WithMany("Feedbacks")
                        .HasForeignKey("AdvertiseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OBJS.API.Models.Customers.Customer", "BidderCustomer")
                        .WithMany("FeedbackTo")
                        .HasForeignKey("BidderID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("OBJS.API.Models.Customers.Customer", "OwnerCustomer")
                        .WithMany("FeedbackFrom")
                        .HasForeignKey("OwnerID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("OBJS.API.Models.Categories.Category", b =>
                {
                    b.HasOne("OBJS.API.Models.Categories.Category", "ParentCategory")
                        .WithMany("SubCategory")
                        .HasForeignKey("ParentID");
                });

            modelBuilder.Entity("OBJS.API.Models.Customers.CustomerDetail", b =>
                {
                    b.HasOne("OBJS.API.Models.Customers.Customer", null)
                        .WithMany("CustomerDetails")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("OBJS.API.Models.Transactions.Bid", b =>
                {
                    b.HasOne("OBJS.API.Models.Advertises.Advertise", "Advertise")
                        .WithMany("Bids")
                        .HasForeignKey("AdvertiseId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("OBJS.API.Models.Customers.Customer", "Customer")
                        .WithMany("Bids")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
